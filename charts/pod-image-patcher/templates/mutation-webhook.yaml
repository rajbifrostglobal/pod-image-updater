{{- $cn := printf "%s.%s.svc" ( include "pod-image-patcher.service.mutationWebhook" . ) .Release.Namespace }}
{{- $ca := genCA "pod-image-patcher-webhook-ca" 3650 -}}
{{- $altNames := list ( printf "%s" ( include  "pod-image-patcher.service.mutationWebhook" . ) ) ( printf "%s.%s" ( include "pod-image-patcher.service.mutationWebhook"  . ) .Release.Namespace ) ( printf "%s.%s.svc" ( include "pod-image-patcher.service.mutationWebhook" . ) .Release.Namespace ) -}}
{{- $cert := genSignedCert $cn nil $altNames 3650 $ca -}}
kind: MutatingWebhookConfiguration
{{- if .Capabilities.APIVersions.Has "admissionregistration.k8s.io/v1" }}
apiVersion: admissionregistration.k8s.io/v1
{{- else }}
apiVersion: admissionregistration.k8s.io/v1beta1
{{- end }}
metadata:
  name: {{ template "pod-image-patcher.fullname" . }}-mutations
  labels:
    {{- include "pod-image-patcher.metaLabels" . | nindent 4 }}
webhooks:
- name: mutations.pod-image-patcher.pod-image-patcher
  matchPolicy: Equivalent
  namespaceSelector:
    {{- if .Values.webhook.ignoreNamespacewithLabels }}
    matchExpressions:
    {{- range $k, $v := .Values.webhook.ignoreNamespacewithLabels }}
    - key: {{ $k }}
      operator: NotIn
      values:
      {{- range $k1, $v1 := $v }}
      - {{ $v1 }}      
      {{- end }}
    {{- end }}
    {{- end }}
    {{- if .Values.webhook.namespaceLabels }}
    matchLabels:
      {{- range $key, $val := .Values.webhook.namespaceLabels }}
      {{ $key }}: {{ $val }}
      {{- end }} 
    {{- end }} 
  failurePolicy: {{ .Values.webhook.failurePolicy }}
  sideEffects: None
  {{- if .Capabilities.APIVersions.Has "admissionregistration.k8s.io/v1" }}
  admissionReviewVersions: ["v1", "v1beta1"]
  {{- else }}
  admissionReviewVersions: ["v1beta1"]
  {{- end }}
  # admissionReviewVersions: ["v1beta1"]
  rules:
  - apiGroups:
    - '*'
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    {{- with .Values.webhook.resourcesToMutate }}
    resources:
      {{- toYaml . | nindent 4 }}
    {{- end }} 
  clientConfig:
    caBundle: {{ b64enc $ca.Cert }}
    service:
      name: {{ template "pod-image-patcher.service.mutationWebhook" . }}
      namespace: {{ .Release.Namespace }}
      path: /mutate
      port: 443
  timeoutSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "pod-image-patcher.service.mutationWebhook" . }}
  labels:
    {{- include "pod-image-patcher.metaLabels" . | nindent 4 }}
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app: vault-secrets-injector
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "pod-image-patcher.fullname" . }}-mutation-webhook-keypair
  labels:
    {{- include "pod-image-patcher.metaLabels" . | nindent 4 }}
type: kubernetes.io/tls
data:
  tls.crt: {{ b64enc $cert.Cert }}
  tls.key: {{ b64enc $cert.Key }}